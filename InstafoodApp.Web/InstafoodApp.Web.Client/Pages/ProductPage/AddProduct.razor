@page "/add-product"
@inject NavigationManager _nav
@inject IProductService _productService
@attribute [Authorize(Roles = "Admin")]
<PageTitle>Add Product</PageTitle>

<div class="mt-5 px-2 w-100">
    <div class="col-lg-4 offset-lg-4 pt-4 pb-4 border rounded">
        <EditForm Model="@productModel" OnValidSubmit="Add" FormName="ProductForm">
            <DataAnnotationsValidator />
            <div class="mb-3 text-center flex-column">
                <h3>ADD PRODUCT</h3>
            </div>
            <div class="mb-3 mx-2">
                <label class="ms-2">Product Name</label>
                <InputText @bind-Value="productModel.ProductName" class="form-control" placeholder="Enter the Product Name" />
                <ValidationMessage For="()=>productModel.ProductName" />
            </div>
            <div class="mb-3 mx-2">
                <label class="ms-2">Product Description</label>
                <InputTextArea @bind-Value="productModel.ProductDescription" class="form-control" placeholder="Enter the Product Description" />
                <ValidationMessage For="()=>productModel.ProductDescription" />
            </div>
            <div class="mb-3 mx-2">
                <label class="ms-2">Unit Price</label>
                <InputNumber @bind-Value="productModel.UnitPrice" class="form-control" placeholder="Enter the Unit Price" />
                <ValidationMessage For="()=>productModel.UnitPrice" />
            </div>
            <div class="mb-3 mx-2">
                <label class="ms-2">Image Url</label>
                <InputText @bind-Value="productModel.ImageUrl" class="form-control" placeholder="Enter the Image Url" />
                <ValidationMessage For="()=>productModel.ImageUrl" />
            </div>
            <div class="mb-3 text-center">
                <span class="text-danger">@errorMessage</span>
            </div>
            <div class="mb-3 mt-3 d-grid gap-2">
                <button type="submit" class="mx-2 btn btn-primary">Add Product</button>
            </div>
        </EditForm>
    </div>
</div>

@code {
    [SupplyParameterFromForm]
    public ProductDTO productModel { get; set; } = new();
    public string? errorMessage;

    private async Task Add()
    {
        var response = await _productService.Add(productModel);
        if (response == null)
        {
            errorMessage = "Failed to add product";
            return;
        }
        _nav.NavigateTo("/");
    }
}
